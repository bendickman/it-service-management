@page "/ticket/create"
@using IT.Service.Management.UI.Client.Components
@using IT.Service.Management.UI.Client.Components.Forms
@using IT.Service.Management.UI.Client.Services
@using IT.Service.Management.UI.Shared.Clients
@using IT.Service.Management.UI.Shared.Models
@using IT.Service.Management.UI.Shared.Services
@inject IClientTicketService ClientTicketService
@inject INotificationService NotificationService
@inject NavigationManager NavigationManager

<BreadcrumbComponent Ticket="@Ticket" />
<PageTitle>Create Ticket - @Ticket.Title</PageTitle>

    <h1>Create Ticket</h1>
    <br />

    <TicketFormComponent Ticket="@Ticket" IsLoading="@IsLoading" OnValidSubmit="@CreateTicket" SubmitButtonText="Create"></TicketFormComponent>

    @code {
    private Ticket Ticket = new Ticket();

    private bool IsLoading;

    private async Task CreateTicket()
    {
        IsLoading = true;
        var request = new CreateTicketRequest
            {
                Title = Ticket.Title,
                Description = Ticket.Description,
            };

        await ClientTicketService.AddTicket(request);

        NotificationService.Success($"Ticket '{Ticket.Title}' successfully created", true, false);
        IsLoading = false;

        NavigationManager.NavigateTo("/");
    }
}