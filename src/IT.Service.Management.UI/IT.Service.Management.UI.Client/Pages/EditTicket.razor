@page "/ticket/update/{id:guid}"
@using IT.Service.Management.UI.Client.Components
@using IT.Service.Management.UI.Client.Components.Forms
@using IT.Service.Management.UI.Client.Services
@using IT.Service.Management.UI.Shared.Clients
@using IT.Service.Management.UI.Shared.Models
@using IT.Service.Management.UI.Shared.Services
@inject IClientTicketService ClientTicketService
@inject INotificationService NotificationService
@inject NavigationManager NavigationManager

<BreadcrumbComponent Ticket="@Ticket" />
<PageTitle>Edit Ticket - @Ticket.Title</PageTitle>

    <h1>Update Ticket</h1>
    <br />

    <TicketFormComponent Ticket="@Ticket" IsLoading="@IsLoading" OnValidSubmit="@UpdateTicket" SubmitButtonText="Update"></TicketFormComponent>

    @code {
    [Parameter]
    public Guid Id { get; set; }

    private Ticket Ticket = new Ticket();

    private bool IsLoading;

    protected async override Task OnParametersSetAsync()
    {
        Ticket = await ClientTicketService.GetTicketAsync(Id);
    }

    private async Task UpdateTicket()
    {
        IsLoading = true;
        var request = new UpdateTicketRequest
            {
                Id = Ticket.Id,
                Title = Ticket.Title,
                Description = Ticket.Description,
            };

        await ClientTicketService.UpdateTicket(request);

        NotificationService.Success($"Ticket '{Ticket.Title}' successfully saved", true, false);
        IsLoading = false;

        NavigationManager.NavigateTo("/");
    }
}