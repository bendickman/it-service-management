@using IT.Service.Management.UI.Client.Services;
@using IT.Service.Management.UI.Endpoints.Ticket.Add
@using IT.Service.Management.UI.Shared.FormModels
@inject IClientTicketService _clientTicketService;
@inject NavigationManager NavigationManager;

<EditForm EditContext="_editContext" OnValidSubmit="() => CreateTicket()">
    <div>
        <label class="form-label">Title</label>
        <InputText @bind-Value="_formModel.Title" class="form-control"></InputText>

        <label class="form-label">Description</label>
        <InputText @bind-Value="_formModel.Description" class="form-control"></InputText>

    </div>

    <div class="mt-4">
        <button type="submit" class="btn btn-success">Create</button>
    </div>

</EditForm>

@code {
    private TicketFormModel _formModel = new TicketFormModel();
    private EditContext? _editContext = default!;

    protected override void OnInitialized()
    {
        _editContext = new EditContext(_formModel);
    }

    private async Task CreateTicket()
    {
        var request = new CreateTicketRequest
        {
            Title = _formModel.Title,
            Description = _formModel.Description,
        };

        var result = _clientTicketService.AddTicket(request);

        NavigationManager.NavigateTo("/");
    }
}
